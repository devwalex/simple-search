{"version":3,"sources":["serviceWorker.js","Components/Movie.js","Components/MovieList.js","Components/SearchBox.js","movies.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Movie","name","img","description","className","src","alt","MovieList","movies","length","map","movie","index","key","id","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChanged","event","setState","searchField","target","value","toLowerCase","state","filteredMovies","this","filter","toLocaleLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qLAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sCCJSC,EAZD,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,YAC1B,OACE,yBAAKC,UAAU,sDACb,yBAAKC,IAAKH,EAAKI,IAAI,UACnB,6BACE,wBAAIF,UAAU,MAAMH,GACpB,uBAAGG,UAAU,MAAMD,MCQZI,EAbG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OAAIA,EAAOC,QAAU,EACZ,kDAGP,6BACGD,EAAOE,KAAI,SAACC,EAAOC,GAClB,OAAO,kBAAC,EAAD,CAAOC,IAAKD,EAAOE,GAAIH,EAAMG,GAAIb,KAAMU,EAAMV,KAAMC,IAAKS,EAAMT,IAAKC,YAAaQ,EAAMR,mBCAtFY,EARG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,yBAAKZ,UAAU,OACb,2BAAOA,UAAU,kCAAkCa,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,MCLhGR,EAAS,CACpB,CACEM,GAAI,EACJb,KAAM,eACNC,IAAK,sCACLC,YAAa,8IAEf,CACEW,GAAI,EACJb,KAAM,UACNC,IAAK,sCACLC,YAAa,8IAEf,CACEW,GAAI,EACJb,KAAM,aACNC,IAAK,sCACLC,YAAa,8IAEf,CACEW,GAAI,EACJb,KAAM,SACNC,IAAK,sCACLC,YAAa,8IAEf,CACEW,GAAI,EACJb,KAAM,mBACNC,IAAK,sCACLC,YAAa,8IAEf,CACEW,GAAI,EACJb,KAAM,cACNC,IAAK,sCACLC,YAAa,8IAEf,CACEW,GAAI,EACJb,KAAM,gBACNC,IAAK,sCACLC,YAAa,8IAEf,CACEW,GAAI,EACJb,KAAM,UACNC,IAAK,sCACLC,YAAa,8IAEf,CACEW,GAAI,EACJb,KAAM,YACNC,IAAK,sCACLC,YAAa,8IAEf,CACEW,GAAI,GACJb,KAAM,cACNC,IAAK,sCACLC,YAAa,+IC3BFiB,G,wDAzBb,aAAe,IAAD,8BACZ,gBAOFC,gBAAkB,SAACC,GACjB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,MAAMC,iBAPhD,EAAKC,MAAQ,CACXpB,OAAQA,EACRgB,YAAa,IAJH,E,qDAWJ,IAAD,OACDK,EAAiBC,KAAKF,MAAMpB,OAAOuB,QAAO,SAACpB,GAC/C,OAAOA,EAAMV,KAAK+B,oBAAoBC,SAAS,EAAKL,MAAMJ,gBAE5D,OACE,yBAAKpB,UAAU,MACb,oDACA,kBAAC,EAAD,CAAWY,aAAcc,KAAKT,kBAC9B,kBAAC,EAAD,CAAWb,OAAQqB,S,GApBTK,cCAlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SNyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.eed5f8c5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n\nconst Movie = ({ name, img, description }) => {\n  return (\n    <div className=\"bg-light-blue dib pa3 ma2 grow bw2 mw5 tc shadow-5\">\n      <img src={img} alt=\"movie\" />\n      <div>\n        <h2 className=\"tl\">{name}</h2>\n        <p className=\"tl\">{description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Movie;\n","import React from \"react\";\nimport Movie from \"./Movie\";\n\nconst MovieList = ({ movies }) => {\n  if (movies.length <= 0) {\n    return <h3>Movie Not Found!!!</h3>;\n  }\n  return (\n    <div>\n      {movies.map((movie, index) => {\n        return <Movie key={index} id={movie.id} name={movie.name} img={movie.img} description={movie.description} />;\n      })}\n    </div>\n  );\n};\n\nexport default MovieList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa3\">\n      <input className=\"pa3 ba b--blue bg-lightest-blue\" type=\"search\" placeholder=\"Search Movies\" onChange={searchChange} />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","export const movies = [\n  {\n    id: 1,\n    name: \"Fatal Affair\",\n    img: \"https://img.netnaija.com/Q6bHHK.jpg\",\n    description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum ab, harum laudantium nisi repellendus modi quia! Sunt odio alias quas.\",\n  },\n  {\n    id: 2,\n    name: \"Gundala\",\n    img: \"https://img.netnaija.com/yFbHHK.jpg\",\n    description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum ab, harum laudantium nisi repellendus modi quia! Sunt odio alias quas.\",\n  },\n  {\n    id: 3,\n    name: \"Attraction\",\n    img: \"https://img.netnaija.com/CTbHHK.jpg\",\n    description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum ab, harum laudantium nisi repellendus modi quia! Sunt odio alias quas.\",\n  },\n  {\n    id: 4,\n    name: \"SamSam\",\n    img: \"https://img.netnaija.com/L6bHHK.jpg\",\n    description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum ab, harum laudantium nisi repellendus modi quia! Sunt odio alias quas.\",\n  },\n  {\n    id: 5,\n    name: \"The Sunlit Night\",\n    img: \"https://img.netnaija.com/R6bHHK.jpg\",\n    description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum ab, harum laudantium nisi repellendus modi quia! Sunt odio alias quas.\",\n  },\n  {\n    id: 6,\n    name: \"The Outpost\",\n    img: \"https://img.netnaija.com/_VbHHK.jpg\",\n    description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum ab, harum laudantium nisi repellendus modi quia! Sunt odio alias quas.\",\n  },\n  {\n    id: 7,\n    name: \"The Old Guard\",\n    img: \"https://img.netnaija.com/QmbHHK.jpg\",\n    description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum ab, harum laudantium nisi repellendus modi quia! Sunt odio alias quas.\",\n  },\n  {\n    id: 8,\n    name: \"Archive\",\n    img: \"https://img.netnaija.com/FmbHHK.jpg\",\n    description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum ab, harum laudantium nisi repellendus modi quia! Sunt odio alias quas.\",\n  },\n  {\n    id: 9,\n    name: \"First Cow\",\n    img: \"https://img.netnaija.com/TmbHHK.jpg\",\n    description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum ab, harum laudantium nisi repellendus modi quia! Sunt odio alias quas.\",\n  },\n  {\n    id: 10,\n    name: \"Money Plane\",\n    img: \"https://img.netnaija.com/LwbHHK.jpg\",\n    description: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum ab, harum laudantium nisi repellendus modi quia! Sunt odio alias quas.\",\n  },\n];\n","import React, { Component } from \"react\";\nimport MovieList from \"./Components/MovieList\";\nimport SearchBox from \"./Components/SearchBox\";\nimport { movies } from \"./movies\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: movies,\n      searchField: \"\",\n    };\n  }\n\n  onSearchChanged = (event) => {\n    this.setState({ searchField: event.target.value.toLowerCase() });\n  };\n  render() {\n    const filteredMovies = this.state.movies.filter((movie) => {\n      return movie.name.toLocaleLowerCase().includes(this.state.searchField);\n    });\n    return (\n      <div className=\"tc\">\n        <h1>Simple Movies Search</h1>\n        <SearchBox searchChange={this.onSearchChanged} />\n        <MovieList movies={filteredMovies} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}